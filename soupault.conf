[settings]
  verbose = true

  #true means the site dir contains page bodies
  #we may want to change to false which means site dir contains full pages
  #but maybe not
  generator_mode = true
  default_template_file = "template.j2"
  default_content_selector = "main"
  default_content_action = "replace_content"

  #false means dont put a html file in its own dir
  clean_urls = true

  #why TF is this needed
  #page_character_encoding = "ascii"

  build_dir = "."
  site_dir = "text"

  doctype = "<!DOCTYPE html>"

  #page_file_extensions = ["html", "tsv"]

#TODO: handle title
#[widgets.title]
#  widget = "preprocess_element"
#  selector = "title"
#  command = 'sed -e "s/{{thing_slug}}/$(basename $(basename $PAGE_FILE .tsv) .html)/" '
#[widgets.title]
#  widget = "title"
#  #selector = "meta[name=\"title\"][content]"
#  selector = "meta[name=\"title\"]"
#  extract_attribute = "content"
#  default = "Alabama Transgender Rights Action Coalition"
#  append = " :: ALTRAC"
[plugins.meta-extract]
  lua_source = '''
  metas = HTML.select(page, 'meta[name="' .. config["meta_name"] .. '"]')
  local index = 1
  while metas[index] do
    content = HTML.get_attribute(metas[index], "content")
    print("[EXTRACT] " .. content)
    index = index + 1
  end

  -- now use the sucker
  title_el = HTML.select_one(page, 'title')
  new_title_el = HTML.create_element('title', content)
  HTML.insert_before(title_el, new_title_el)
  HTML.delete(title_el)

  '''

[plugins.build-h1]
  lua_source = '''
  if target_file == "./index.html" then
    print("lol hey")
  else

    title = HTML.select_one(page, 'title')
    title_text = HTML.inner_html(title)

    old_h1 = HTML.select_one(page, 'h1')

    a = HTML.create_element('a', 'ALTRAC')
    HTML.set_attribute(a, 'href', '/')

    new_h1 = HTML.create_element('h1', '  Â· ' .. title_text)
    HTML.prepend_child(new_h1, a)

    HTML.insert_before(old_h1, new_h1)
    HTML.delete(old_h1)
  end

  '''

[plugins.append-to-title]
  lua_source = '''
  if target_file == "./index.html" then
    print("lol hey 2")
  else
    old_title = HTML.select_one(page, 'title')
    title_text = HTML.inner_html(old_title)
    new_title = HTML.create_element('title', title_text .. " :: ALTRAC")
    HTML.insert_before(old_title, new_title)
    HTML.delete(old_title)
  end
  '''





[widgets.extract-title-from-meta]
  widget = "meta-extract"
  meta_name = "title"
  destination = "title"
  
[widgets.build-h1]
  after = "extract-title-from-meta"
  widget = "build-h1"

[widgets.append-to-title]
  after = "build-h1"
  widget = "append-to-title"

